[{"content":"摘要：本文介绍了如何通过hugo 快速搭建一个博客网站，然后设置PaperMod 主题，最后构建一个Github自动发布的博客系统。\n0x01 快速开始 1、软件安装：软件包链接Releases · gohugoio/hugo，建议安装带extended的扩展版本。\n# 下载 wget hugo_extended_0.xxx.x_linux-amd64.deb # 安装 sudo dpkg -i hugo_extended_0.xxx.x_linux-amd64.deb # 验证 hugo version 2、博客发布，访问http://localhost:1313/，查看渲染的博客内容。\n# 创建博客站点，yaml配置方式，默认是toml配置方式 hugo new site blog --format yaml # 进入博客 cd blog # 创建文章 hugo new posts/first_post.md # 博客发布 hugo server --disableFastRender --navigateToChanged --environment pruction --bind 0.0.0.0 0x02 适配主题 1、主题安装，主题库链接hugo-PaperMod，其他主题可以参考themes。\n# 进入博客 cd blog # 下载主题 git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod # needed when you reclone your repo (submodules may not get cloned automatically) git submodule update --init --recursive 2、主题适配，参考hugo-PaperMod文档，手动复制config.yml内容到 hugo.yaml，注意提前备份hugo.yaml。\n3、自定义参数，按自己需求，修改hugo.yaml内容的全局配置、菜单配置、页面配置等。\nbaseURL: \u0026#34;...\u0026#34; title: \u0026#34;...\u0026#34; copyright: \u0026#34;...\u0026#34; menu: ... 4、数学公式，PaperMod主题不支持公式渲染，需要手动适配，参考PaperMod Math Typesetting。注意，需要在hugo.yaml增加属性math: true。\n5、评论系统，todo。\n0x03 部署博客 参考link，Github个人网页上部署Hugo博客，每次提交内容到博客仓库Blog（Hugo搭建的仓库），博客仓库Blog会同步信息到个人页面仓库xxx.github.io，并发布网页。\n1、增加一个忽略文件.gitignore，目的是屏蔽本地渲染内容同步到远程仓库，内容如下：\nnode_modules/ build/ public/ resources/ .hugo_build.lock 2、增加一个发布脚步hugo-blog.sh，目的是本地发布可以运行./hugo-blog.sh，内容如下：\nhugo server --disableFastRender --navigateToChanged --environment pruction --bind 0.0.0.0 3、登录Github网站，网页端创建一个==空仓库==，同步本地blog仓库到远程仓库，操作步骤如下：\ncd blog # 到站点文件夹 git init git add . git branch -M main # https://github.com/xxx/blog.git 修改为实际远程仓库链接 git remote add origin https://github.com/xxx/blog.git git push -u origin main 4、登录Github网站，创建个人页面xxx.github.io==空仓库==（第一个字段需要和你账号同名），用于构建github pages。\n5、创建Token密钥，选择Github账号，选择Settings，选择Developer Setting，选择Personal access tokens，选择Token(classic)，点击右上角的Generate new token创建密钥，选择Generate new token(classic)，Note为GP_DEPLOY_TOKEN，勾选repo和workflow，点击Generate token生成token密钥。\n6、配置博客Blog仓库的权限，选择Settings，选择Secrets and Variables，选择Actions，点击New repository secret创建密钥，Name写GP_DEPLOY_TOKEN，Secret填写生成的token密钥。\n7、配置博客Blog仓库的同步Action脚步，增加.github/workflows/deploy-hugo.yml文件，需要修改external_repository字段为个人账号，具体内容如下：\nname: Deploy hugo on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.GP_DEPLOY_TOKEN }} external_repository: XXX/XXX.github.io publish_branch: main publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} 8、配置博客Blog仓库的主题更新Action脚步，定时更新主题，增加.github/workflows/update-theme.yml文件，具体内容如下：\nname: Update theme # Controls when the workflow will run on: schedule: # Update theme automatically everyday at 00:00 UTC - cron: \u0026#34;0 0 * * *\u0026#34; # Allows you to run this workflow manually from the Actions tab workflow_dispatch: jobs: Update-PaperMod: runs-on: ubuntu-latest permissions: write-all steps: - name: Check out repository code uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Update theme run: git submodule update --remote --merge themes/PaperMod - name: Change remote origin run: | git remote remove origin git remote add origin https://github.com/Yangly0/blog.git - name: Commit changes uses: stefanzweifel/git-auto-commit-action@v4 with: branch: main commit_message: \u0026#39;:arrow_up: Chore(theme): update PaperMod version\u0026#39; commit_author: \u0026#39;github-actions[bot] \u0026lt;github-actions[bot]@users.noreply.github.com\u0026gt;\u0026#39; push_options: \u0026#39;--set-upstream\u0026#39; 9、提交deploy-hugo.yml和update-theme.yml远程博客Blog仓库，并自动发布到个人网页xxx.github.io仓库，访问xxx.github.io网站查看个人博客，具体操作如下：\ncd blog git add . git commit -m \u0026#34;feat: add workflow\u0026#34; git push origin main 0x04 撰写博客 1、常见文章，即blog/content/posts文件夹下创建md文件完成，然后写入以下内容：\n--- date: \u0026#39;2024-11-24T02:02:24+08:00\u0026#39; draft: false title: \u0026#39;First_post\u0026#39; --- 摘要：abstract \u0026lt;!--more--\u0026gt; ## 标题1 正文 2、设置前置参数，在文章内容前面添加 yaml、toml 或者 json 格式的参数，配置文章相关属性。\n--- date: \u0026#39;2024-11-24T02:02:24+08:00\u0026#39; draft: false title: \u0026#39;First_post\u0026#39; ... --- 3、设置摘要，通过\u0026lt;!--more--\u0026gt;隔离摘要和内容，并且把摘要显示到预览块。\n摘要：demo \u0026lt;!--more--\u0026gt; 正文 4、博客内容，根据需求，自定义内容。\n5、发布博客，只需要提交到远程仓库，自动发布到个人页面，操作如下：\ngit add . git commit -m \u0026#34;feat: add posts\u0026#34; git push origin main 参考","permalink":"https://yangly0.github.io/posts/20241123215151/","summary":"\u003cp\u003e摘要：本文介绍了如何通过hugo 快速搭建一个博客网站，然后设置PaperMod 主题，最后构建一个Github自动发布的博客系统。\u003c/p\u003e","title":"如何搭建一个博客系统？"}]